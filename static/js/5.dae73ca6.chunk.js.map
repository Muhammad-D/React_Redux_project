{"version":3,"sources":["components/hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToProps","state","isAuth","auth","WithAuthReddirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","className","s","dialog","id","name","Message","l","myMessage","message","maxLength10","maxLengthCreator","DialogsReduxForm","reduxForm","form","sendText","onSubmit","handleSubmit","Field","textarea","component","TextArea","placeholder","validate","requiredField","Dialogs","dialogsElements","dialogs","map","d","i","key","toString","messagesElements","messages","m","dialogItems","formData","addMessage","newMessageText","compose","dialogPage","dispatch","actionCreaterAddMessage"],"mappings":"4KAIMA,EAAkB,SAACC,GAAD,MAAY,CAClCC,OAAQD,EAAME,KAAKD,SAaNE,IAVS,SAACC,GAAe,IAChCC,EAD+B,uKAGjC,OAAKC,KAAKC,MAAMN,OACT,kBAACG,EAAcE,KAAKC,OADI,kBAAC,IAAD,CAAUC,GAAG,eAHX,GACLC,IAAML,WAMtC,OAAOM,YAAQX,EAARW,CAAyBL,K,oBCdlCM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,QAAU,yBAAyB,YAAc,6BAA6B,SAAW,0BAA0B,SAAW,0BAA0B,SAAW,4B,4GCW1OC,EARI,SAAAN,GACjB,OACE,yBAAKO,UAAWC,IAAEC,QAChB,kBAAC,IAAD,CAASR,GAAE,mBAAcD,EAAMU,KAAOV,EAAMW,Q,0BCOnCC,EAVC,SAACZ,GACf,OACE,6BACE,qCAAKO,UAAWM,IAAEC,WAAlB,YAAwCN,IAAEM,WACvCd,EAAMe,W,iCCyBTC,EAAcC,YAAiB,IAmB/BC,EAAmBC,YAAU,CAAEC,KAAM,WAAlBD,EAjBL,SAACnB,GACnB,OACE,0BAAMO,UAAWC,IAAEa,SAAUC,SAAUtB,EAAMuB,cAC3C,kBAACC,EAAA,EAAD,CACEb,KAAK,iBACLJ,UAAWC,IAAEiB,SACbC,UAAWC,IACXC,YAAY,qBACZC,SAAU,CAACC,IAAed,KAE5B,6BACE,sDAQOe,EA3CC,SAAC/B,GACf,IAAIgC,EAAkBhC,EAAMiC,QAAQC,KAAI,SAACC,EAAGC,GAAJ,OACtC,kBAAC,EAAD,CAAYC,IAAKD,EAAEE,WAAY3B,KAAMwB,EAAExB,KAAMD,GAAIyB,EAAEzB,QAGjD6B,EAAmBvC,EAAMwC,SAASN,KAAI,SAACO,EAAGL,GAAJ,OACxC,kBAAC,EAAD,CAASC,IAAKD,EAAGrB,QAAS0B,EAAE1B,aAO9B,OACE,yBAAKR,UAAWC,IAAEyB,SAChB,yBAAK1B,UAAWC,IAAEkC,aAAcV,GAChC,yBAAKzB,UAAWC,IAAEgC,UAAWD,GAC7B,kBAACrB,EAAD,CAAkBI,SARL,SAACqB,GAChB3C,EAAM4C,WAAWD,EAASE,qB,kCCAfC,sBACblD,IACAO,aAZoB,SAACV,GAAD,MAAY,CAChCwC,QAASxC,EAAMsD,WAAWd,QAC1BO,SAAU/C,EAAMsD,WAAWP,aAGJ,SAACQ,GAAD,MAAe,CACtCJ,WAAY,SAACC,GAAD,OACVG,EAASC,YAAwBJ,SAGtBC,CAGbf","file":"static/js/5.dae73ca6.chunk.js","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Redirect } from \"react-router-dom\";\n\nconst mapStateToProps = (state) => ({\n  isAuth: state.auth.isAuth,\n});\n\nlet WithAuthReddirect = (Component) => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return <Redirect to=\"/login\" />;\n      return <Component {...this.props} />;\n    }\n  }\n  return connect(mapStateToProps)(RedirectComponent);\n};\n\nexport default WithAuthReddirect;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialog\":\"Dialogs_dialog__lk_cw\",\"message\":\"Dialogs_message__1xIDh\",\"dialogItems\":\"Dialogs_dialogItems__3flRc\",\"messages\":\"Dialogs_messages__1w_Up\",\"sendText\":\"Dialogs_sendText__PMo4F\",\"textarea\":\"Dialogs_textarea__PRKXN\"};","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\nimport { NavLink } from \"react-router-dom\";\n\nconst DialogItem = props => {\n  return (\n    <div className={s.dialog}>\n      <NavLink to={`/dialogs/${props.id}`}>{props.name}</NavLink>\n    </div>\n  );\n};\n\nexport default DialogItem;\n","import React from \"react\";\nimport s from \"./../Dialogs.module.css\";\nimport l from \"./Message.module.css\";\n\nconst Message = (props) => {\n  return (\n    <div>\n      <div className={l.myMessage} className={s.myMessage}>\n        {props.message}\n      </div>\n    </div>\n  );\n};\n\nexport default Message;\n","import React from \"react\";\nimport s from \"./Dialogs.module.css\";\nimport DialogItem from \"./DialogItem/DialogItem\";\nimport Message from \"./Message/Message\";\nimport { Field, reduxForm } from \"redux-form\";\nimport { TextArea } from \"../common/FormsControlers/FormsControlers\";\nimport {\n  maxLengthCreator,\n  requiredField,\n} from \"../../utilities/validation/validation\";\n\nconst Dialogs = (props) => {\n  let dialogsElements = props.dialogs.map((d, i) => (\n    <DialogItem key={i.toString()} name={d.name} id={d.id} />\n  ));\n\n  let messagesElements = props.messages.map((m, i) => (\n    <Message key={i} message={m.message} />\n  ));\n\n  let addMessage = (formData) => {\n    props.addMessage(formData.newMessageText);\n  };\n\n  return (\n    <div className={s.dialogs}>\n      <div className={s.dialogItems}>{dialogsElements}</div>\n      <div className={s.messages}>{messagesElements}</div>\n      <DialogsReduxForm onSubmit={addMessage} />\n    </div>\n  );\n};\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst DialogsForm = (props) => {\n  return (\n    <form className={s.sendText} onSubmit={props.handleSubmit}>\n      <Field\n        name=\"newMessageText\"\n        className={s.textarea}\n        component={TextArea}\n        placeholder=\"Enter your message\"\n        validate={[requiredField, maxLength10]}\n      ></Field>\n      <div>\n        <button>SEND Messsage</button>\n      </div>\n    </form>\n  );\n};\n\nconst DialogsReduxForm = reduxForm({ form: \"dialogs\" })(DialogsForm);\n\nexport default Dialogs;\n","import Dialogs from \"./Dialogs\";\nimport {\n  actionCreaterAddMessage,\n  actionCreaterChangeMessage,\n} from \"../../redux/dialog-reducer\";\nimport { connect } from \"react-redux\";\nimport WithAuthReddirect from \"../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\n\n//\n\nlet mapStateToProps = (state) => ({\n  dialogs: state.dialogPage.dialogs,\n  messages: state.dialogPage.messages,\n});\n\nlet mapDispatchToProps = (dispatch) => ({\n  addMessage: (newMessageText) =>\n    dispatch(actionCreaterAddMessage(newMessageText)),\n});\n\nexport default compose(\n  WithAuthReddirect,\n  connect(mapStateToProps, mapDispatchToProps)\n)(Dialogs);\n"],"sourceRoot":""}